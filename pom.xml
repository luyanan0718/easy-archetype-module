<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<groupId>io.github.easy.archetype</groupId>
	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>
	<version>1.0</version>
	<artifactId>easy-archetype-module</artifactId>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<spring-boot.version>2.2.5.RELEASE</spring-boot.version>
		<spring-cloud.version>Hoxton.SR3</spring-cloud.version>
		<spring-cloud-alibaba.version>2.2.1.RELEASE</spring-cloud-alibaba.version>
		<hutool.version>5.1.1</hutool.version>
		<lombok.version>1.18.12</lombok.version>
		<mysql-connector-java.version>5.1.46</mysql-connector-java.version>
		<mybatis-plus-boot-starter.version>3.3.2</mybatis-plus-boot-starter.version>
		<orika-core.version>1.5.4</orika-core.version>
		<hibernate-validator.version>6.0.14.Final</hibernate-validator.version>
		<swagger-annotations.version>1.5.22</swagger-annotations.version>
		<jsoup.version>1.11.2</jsoup.version>
		<knife4j.version>2.0.6</knife4j.version>
		<fastjson.version>1.2.73</fastjson.version>
		<servlet-api.version>2.5</servlet-api.version>
		<commons-configuration2.version>2.2</commons-configuration2.version>
		<commons-beanutils.version>1.9.3</commons-beanutils.version>
		<freemarker.version>2.3.29</freemarker.version>
		<snakeyaml.version>1.26</snakeyaml.version>
		<kaptcha.version>2.3.2</kaptcha.version>
		<spring.checkstyle.version>0.0.23</spring.checkstyle.version>
		<git.commit.version>2.2.5</git.commit.version>
		<minio.version>3.0.10</minio.version>
		<swagger-annotations.version>1.6.2</swagger-annotations.version>
		<slf4j-api.version>1.7.30</slf4j-api.version>
		<newVersion>1.0</newVersion>
	</properties>


	<dependencies>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j-api.version}</version>
			</dependency>

			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger-annotations.version}</version>
			</dependency>
			<dependency>
				<groupId>io.minio</groupId>
				<artifactId>minio</artifactId>
				<version>${minio.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup.version}</version>
			</dependency>
			<!--验证码 -->
			<dependency>
				<groupId>com.github.penggle</groupId>
				<artifactId>kaptcha</artifactId>
				<version>${kaptcha.version}</version>
			</dependency>
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>
			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>${snakeyaml.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-configuration2</artifactId>
				<version>${commons-configuration2.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<!-- ORM 框架-->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-generator</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-spring-boot-starter</artifactId>
				<version>${knife4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>

			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!--spring boot 公共版本定义-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--spring cloud 公共版本定义-->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--spring cloud alibaba-->
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!--			<dependency>-->
			<!--				<groupId>io.github.easy.archetype</groupId>-->
			<!--				<artifactId>easy-archetype-dependencies</artifactId>-->
			<!--				<version>${project.version}</version>-->
			<!--				<type>pom</type>-->
			<!--				<scope>import</scope>-->
			<!--			</dependency>-->

		</dependencies>
	</dependencyManagement>
	<build>
		<pluginManagement>
			<plugins>
				<!-- source包 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.0</version>
					<configuration>
						<attach>true</attach>
					</configuration>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 生成doc文档 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>3.0.0</version>
					<executions>
						<execution>
							<!-- 绑定pmd:pmd到validate生命周期，在validate时会自动进行代码规范检查 -->
							<id>validate</id>
							<phase>validate</phase>
							<configuration>
								<!-- 配置文件的路径，在style文件夹下 -->
								<configLocation>style/checkstyle.xml</configLocation>
								<encoding>UTF-8</encoding>
								<consoleOutput>true</consoleOutput>
								<failsOnError>true</failsOnError>
								<includeTestSourceDirectory>false</includeTestSourceDirectory>
							</configuration>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>3.8</version>
					<configuration>
						<rulesets>
							<ruleset>rulesets/java/ali-comment.xml</ruleset>
							<ruleset>rulesets/java/ali-concurrent.xml</ruleset>
							<ruleset>rulesets/java/ali-constant.xml</ruleset>
							<ruleset>rulesets/java/ali-exception.xml</ruleset>
							<ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
							<ruleset>rulesets/java/ali-naming.xml</ruleset>
							<ruleset>rulesets/java/ali-oop.xml</ruleset>
							<ruleset>rulesets/java/ali-orm.xml</ruleset>
							<ruleset>rulesets/java/ali-other.xml</ruleset>
							<ruleset>rulesets/java/ali-set.xml</ruleset>
						</rulesets>
						<printFailingErrors>true</printFailingErrors>
					</configuration>
					<executions>
						<execution>
							<id>validate</id>
							<phase>validate</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<!-- 需要使用阿里的一些xml文件，因此需要这里增加p3c的依赖 -->
						<dependency>
							<groupId>com.alibaba.p3c</groupId>
							<artifactId>p3c-pmd</artifactId>
							<version>1.3.0</version>
						</dependency>
					</dependencies>
				</plugin>

			</plugins>
		</pluginManagement>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!--            <plugin>-->
			<!--                <groupId>org.apache.maven.plugins</groupId>-->
			<!--                <artifactId>maven-javadoc-plugin</artifactId>-->
			<!--            </plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<newVersion>${newVersion}</newVersion>
					<newTag>${newVersion}</newTag>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.8.1</version>
				<configuration>
					<connectionType>developerConnection</connectionType>
					<tag>${project.version}</tag>
					<!--                    <username>luyanan0718</username>-->
				</configuration>
			</plugin>

		</plugins>

	</build>
	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub OWNER Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/luyanan0718/easy-archetype-module</url>
		</repository>
	</distributionManagement>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<!--        git项目地址可以用SSH  也可以用 HTTPS的-->
		<connection>scm:git:https://github.com/luyanan0718/easy-archetype-module.git</connection>
		<!--        #git项目地址可以用SSH 也可以用 HTTPS的-->
		<developerConnection>scm:git:git@github.com:luyanan0718/easy-archetype-module.git</developerConnection>
	</scm>
	<developers>
		<developer>
			<name>luyanan</name>
			<email>luyanan0718@163.com</email>
			<url>https://luyanan.com</url>
		</developer>
	</developers>
	<modules>
		<module>easy-archetype-dependencies</module>
		<module>easy-archetype-framework</module>
		<module>easy-archetype-security</module>
		<module>easy-archetype-swagger</module>
		<module>easy-archetype-job</module>
		<module>easy-archetype-data</module>
		<module>easy-archetype-generate</module>
	</modules>
</project>